<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>console_is_open = false;
console_line_number = 10;
console_scroll = 0;
console_lines[0,0] = "Running version "+string(GM_version);
console_lines[0,1] = c_lime;
console_last_cmd = "";
console_string = "";
command_map = ds_map_create();

console_command_add("print",cmd_print,1,"Prints a message to the console","print &lt;text&gt;");
console_command_add("exit",cmd_exit,0,"Closes the console");
console_command_add("help",cmd_help,0,"Shows this help","help &lt;command&gt;");
console_command_add("?",cmd_help,0,"Same as help");
console_command_add("test",cmd_test,0,"Opens rm_testroom");
console_command_add("test2",cmd_test2,0,"Opens rm_testroomB");
console_command_add("restart",cmd_restart,0,"Restarts the application");
console_command_add("quit",cmd_quit,0,"Ends the game");
console_command_add("tp",cmd_tp,2,"Teleports the player","tp &lt;x || +x || -x&gt; &lt;y || +x || -y&gt;");
console_command_add("position",cmd_position,0,"Gives you the current position of the player");
console_command_add("version",cmd_version,0,"Shows the current game version and build date");
console_command_add("retry",cmd_retry,0,"Restarts the room");
console_command_add("set",cmd_set,2,"Sets an interface value","set &lt;key&gt; &lt;value&gt;");
console_command_add("get",cmd_get,1,"Prints an interface value to the console","get &lt;key&gt;");

globalvar prevent_controls, interface;
prevent_controls = false;
interface = ds_map_create();
interface[? "noclip"] = false;
interface[? "lighting"] = true;
interface[? "fov"] = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///executed the second tick after room start
//lighting
instance_create(0,0,obj_lighting);
for (var i = 0; i&lt;instance_number(obj_light); i++){
  var inst = instance_find(obj_light,i);
  light_build(inst);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>prevent_controls = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(console_is_open){
  prevent_controls = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (bind_check_pressed('console')){
  console_is_open = !console_is_open;
  if (console_is_open){
    keyboard_string = console_string;
  }else{
    console_string = keyboard_string;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (console_is_open){
  draw_set_font(ft_console);
  draw_set_color(c_dkgray);
  draw_rectangle(0,0,view_wport[0],console_line_number*16+22,false);
  draw_set_color(c_white);
  draw_line(0,console_line_number*16+4,view_wport[0],console_line_number*16+4);
  for (var i=0; i&lt;min(console_line_number, array_height_2d(console_lines)); i++){
    var line_index = i + console_scroll;
    draw_set_color(console_lines[line_index,1]);
    draw_text(0,i*16,console_lines[line_index,0]);
  }
  draw_set_color(c_white);
  draw_text(0,console_line_number*16+4,keyboard_string);
  if (keyboard_check_pressed(vk_enter)){
    console_print("]"+keyboard_string,c_orange);
    if (keyboard_string != ""){
      console_command_execute(keyboard_string);
    }
    console_last_cmd = keyboard_string;
    keyboard_string = "";
  }
  if (keyboard_check_pressed(vk_up)){
    keyboard_string = console_last_cmd;
  }
  
  if (array_height_2d(console_lines) &gt; console_line_number){
    console_scroll += mouse_wheel_down();
    console_scroll -= mouse_wheel_up();
    console_scroll = clamp(console_scroll, 0, array_height_2d(console_lines)-console_line_number);
    draw_set_color(c_white);
    draw_set_alpha(0.3);
    var console_height = console_line_number*16;
    var pos = (console_scroll / array_height_2d(console_lines))*console_height;
    var h = max(console_line_number / array_height_2d(console_lines)*console_height,1);
    draw_rectangle(view_wport[0]-16,pos,view_wport[0],pos+h,false);
    draw_set_alpha(1);
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
